name: Build (Linux Cross)

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      max-parallel: 1

    steps:
    - name: Update sources.list for cross compilation tools
      continue-on-error: true
      run: |
        # - https://askubuntu.com/a/1323570
        # Apt can't find packages on Ubuntu 20.04 arm64 (Raspberry Pi 4)
        # - https://askubuntu.com/questions/1255707/apt-cant-find-packages-on-ubuntu-20-04-arm64-raspberry-pi-4
        sudo dpkg --add-architecture arm64
        sudo touch /etc/apt/sources.list.d/arm-cross-compile-sources.list
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main multiverse universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main multiverse universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main multiverse universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo apt update

    - name: Setup OpenGL and cross compilation tools
      run: |
        sudo apt -y install libc6-arm64-cross libc6-dev-arm64-cross libstdc++-12-dev-arm64-cross g++-12-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: 'update'
        fetch-depth: 1
        submodules: recursive

    # - name: Check before
    #   continue-on-error: true
    #   run: |
    #     ls -l lib/*
    #     ls -l /lib/aarch64-linux-gnu/*
    #     ls -l /usr/include/*
    #     ls -l /usr/aarch64-linux-gnu/include/*
    #     ls -l /usr/include/aarch64-linux-gnu/*

    - name: Run rebuild script
      run: |
        cd ${GITHUB_WORKSPACE}/nanovg_dll
        bash ./build_gl2_linux_cross.sh
        bash ./build_gl3_linux_cross.sh
        cd ${GITHUB_WORKSPACE}

    # - name: Check after
    #   run: |
    #     ls -l lib/*

    - name: Commit new libraries
      continue-on-error: true
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}"
        git add lib/*
        git commit -a -m "commit by ${GITHUB_ACTOR} via GitHub Actions"
        git push --force-with-lease -u origin update
